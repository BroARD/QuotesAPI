// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	service "APIWithout/internal/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateQuote mocks base method.
func (m *MockService) CreateQuote(quote service.Quote) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateQuote", quote)
}

// CreateQuote indicates an expected call of CreateQuote.
func (mr *MockServiceMockRecorder) CreateQuote(quote interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateQuote", reflect.TypeOf((*MockService)(nil).CreateQuote), quote)
}

// DeleteQuoteByID mocks base method.
func (m *MockService) DeleteQuoteByID(quoteID int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteQuoteByID", quoteID)
}

// DeleteQuoteByID indicates an expected call of DeleteQuoteByID.
func (mr *MockServiceMockRecorder) DeleteQuoteByID(quoteID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteQuoteByID", reflect.TypeOf((*MockService)(nil).DeleteQuoteByID), quoteID)
}

// GetQuotes mocks base method.
func (m *MockService) GetQuotes(author string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetQuotes", author)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetQuotes indicates an expected call of GetQuotes.
func (mr *MockServiceMockRecorder) GetQuotes(author interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetQuotes", reflect.TypeOf((*MockService)(nil).GetQuotes), author)
}

// GetRandomQuote mocks base method.
func (m *MockService) GetRandomQuote() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandomQuote")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRandomQuote indicates an expected call of GetRandomQuote.
func (mr *MockServiceMockRecorder) GetRandomQuote() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandomQuote", reflect.TypeOf((*MockService)(nil).GetRandomQuote))
}
